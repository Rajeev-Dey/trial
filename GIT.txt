                                          GIT

git config --global user.name "Rajeev Dey"

git config --global user.pass "*****"

git init [project-name]

git clone [repo-url]

ll ------> to check inside of a repo folder

git status

git remote add origin [URL]

git push origin [branch-name]

// origin is an alias to the repo url

git diff ------> gives difference between the staged and working area   (always do when a file is added and modified at the same time i.e a same file is in staged as well as in working area[modified])

git diff --staged  -----> gives difference between the last commit and staged area 

git rm [file name] ------> it deletes as weel as stages the file and hence we dont have to add it and directly do commit

git mv [prev file name] [new file name] ----> it renames the file and stages the file also.

{IMPORATNT}   git commit -a -m "[commit message]" --- > it adds all the file to staging area and commits at the same time. 

git rm --cached [file name]  ----> if a file is tracked and you dont want to track it now. (uses when you have inserted this file in .gitignore and still it wad tracking......  modified likha hua aa rha tha .ignore ke bawajood bhi)

touch .gitignore -----> makes a file and it is use to ignore those files which we dont want to track

> git log (To view commits)
> git log -p (shows changes in commits)
> git log -p -2 (shows most recent 2 commits and its changes)
> git log --stat (shows changes in commit in short summary)
> git log --pretty=oneline (shows commits in one line with its message or changes made)
> git log --pretty=short (shows commit author and message)
> git log --pretty=full (shows commit author message and the person who committed)
> git log --since=2.days (shows commit in the last two days)
> git log --since=2.weeks (shows commit in the last two weeks)
> git log --since=2.months (shows commit in the last two months)
> git log -pretty=format:"%h - %an" (%h is hash commit and %an is author name) (search these options in git log documentation on google, a website will be there to see these options)
> git log -pretty=format:"%h - %ae" (%h is hash commit and %ae is author email)
> git commit --amend (make changes in latest commit, it opens the vim editor so see how it works, i to edit, escape then type :wq to save and exit it) (It will also merge the any staged file into this this too)

$ git commit --amend -----> To do modifications in previous commit message


$ git restore --staged <filename>  -----> To make file unstaged from staged
                                   

$ git checkout -- <filename> ------> To make File restore/unmodify to previous commit


$ git checkout -f   -----> To make all File restore/unmodify to previous commit








